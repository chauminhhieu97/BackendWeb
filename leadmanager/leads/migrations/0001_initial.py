# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-06-11 08:21
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('NA', 'N/A')], default='male', max_length=31)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('userId', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.TextField(unique=True)),
                ('password', models.TextField()),
                ('faGenres', models.TextField(null=True)),
                ('pointRecom', models.FloatField(null=True)),
                ('fullname', models.TextField(null=True)),
                ('avatar', models.TextField(null=True)),
                ('email', models.EmailField(max_length=100, null=True, unique=True)),
                ('timestamp', models.IntegerField(null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('message', models.CharField(blank=True, max_length=500)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='link',
            fields=[
                ('movieId', models.IntegerField()),
                ('imdbId', models.IntegerField(primary_key=True, serialize=False)),
                ('tmdbId', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='movie',
            fields=[
                ('movieId', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('genres', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='rating',
            fields=[
                ('userId', models.IntegerField()),
                ('movieId', models.IntegerField()),
                ('rating', models.FloatField(primary_key=True, serialize=False)),
                ('timestamp', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='tag',
            fields=[
                ('userId', models.IntegerField()),
                ('movieId', models.IntegerField()),
                ('tag', models.TextField(primary_key=True, serialize=False)),
                ('timestamp', models.IntegerField(null=True)),
            ],
        ),
    ]
